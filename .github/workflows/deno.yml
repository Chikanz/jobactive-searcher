name: Deno Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        deno-target:
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
    steps:
      - uses: actions/checkout@v3

      - name: Set up Deno
        uses: denoland/setup-deno@v1.1.4
        with:
          deno-version: latest

      - name: Build
        run: deno compile --allow-all --target ${{ matrix.deno-target }} main.ts
        env:
          TARGET: ${{ matrix.deno-target }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: app-${{ matrix.deno-target }}
          path: |
            ./app*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3
        with:
          path: build/

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/app-x86_64-apple-darwin
          asset_name: app-macos
          asset_content_type: application/octet-stream

      - name: Upload Release Asset Windows
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./build/app-x86_64-pc-windows-msvc.exe
          asset_name: app-windows.exe
          asset_content_type: application/octet-stream
